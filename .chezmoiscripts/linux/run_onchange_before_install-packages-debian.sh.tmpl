#!{{ lookPath "sh" }}

# DEBIAN ------------------------------
{{ if or (eq .chezmoi.osRelease.id "debian") (eq .chezmoi.osRelease.id "ubuntu") -}}

echo "Install packages"

# need to install utils before everything else
sudo apt-get update -qq
for pkg in {{ range .commonpackages.aptsUtils -}} {{ . }} {{ end -}}; do
  if apt-cache show "$pkg" >/dev/null 2>&1; then
    echo "Installing $pkg..."
    sudo apt-get install -qqy "$pkg" > /dev/null
  else
    echo "Skipping $pkg (not found)"
  fi
done
sudo install -m 0755 -d /etc/apt/keyrings

# Docker
sudo rm -f /etc/apt/keyrings/docker.asc
sudo curl -fsSL https://download.docker.com/linux/{{ .chezmoi.osRelease.id }}/gpg -o /etc/apt/keyrings/docker.asc > /dev/null
sudo chmod a+r /etc/apt/keyrings/docker.asc
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/{{ .chezmoi.osRelease.id }} \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

# packages
sudo apt-get update -qq
for pkg in {{ range .commonpackages.apts -}} {{ . }} {{ end -}}; do
  if apt-cache show "$pkg" >/dev/null 2>&1; then
    echo "Installing $pkg..."
    sudo apt-get install -qqy "$pkg" > /dev/null
  else
    echo "Skipping $pkg (not found)"
  fi
done

{{- if eq .GUI "yes" }}

# brave-browser
sudo curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg > /dev/null
echo "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main" | sudo tee /etc/apt/sources.list.d/brave-browser-release.list > /dev/null

# wezterm
curl -fsSL https://apt.fury.io/wez/gpg.key | sudo gpg --yes --dearmor -o /usr/share/keyrings/wezterm-fury.gpg > /dev/null
echo 'deb [signed-by=/usr/share/keyrings/wezterm-fury.gpg] https://apt.fury.io/wez/ * *' | sudo tee /etc/apt/sources.list.d/wezterm.list > /dev/null

sudo apt-get update -qq

for pkg in {{ range .commonpackages.aptsGUI -}} {{ . }} {{ end -}}; do
  if apt-cache show "$pkg" >/dev/null 2>&1; then
    echo "Installing $pkg..."
    sudo apt-get install -qqy "$pkg" > /dev/null
  else
    echo "Skipping $pkg (not found)"
  fi
done
{{- end }}

{{- if eq .where "home" }}
for pkg in {{ range .personalpackages.apts -}} {{ . }} {{ end -}}; do
  if apt-cache show "$pkg" >/dev/null 2>&1; then
    echo "Installing $pkg..."
    sudo apt-get install -qqy "$pkg" > /dev/null
  else
    echo "Skipping $pkg (not found)"
  fi
done
{{- end }}

{{- if eq .where "work" }}
for pkg in {{ range .workpackages.apts -}} {{ . }} {{ end -}}; do
  if apt-cache show "$pkg" >/dev/null 2>&1; then
    echo "Installing $pkg..."
    sudo apt-get install -qqy "$pkg" > /dev/null
  else
    echo "Skipping $pkg (not found)"
  fi
done
{{- end }}

# Mise installtion
if type ~/bin/mise > /dev/null; then
  echo 'info: mise is already installed'
else
  echo 'Installing mise...'
  curl -s https://mise.run | MISE_QUIET=1 sh > /dev/null
fi

# bitwarden cli
if type ~/.local/bin/bw > /dev/null; then
  echo 'info: bw is already installed'
else
  echo 'Installing bitwarden-cli...'
  curl -sSL "https://vault.bitwarden.com/download/?app=cli&platform=linux" -o bw.zip > /dev/null
  unzip bw.zip -d ~/.local/bin/ > /dev/null
  rm bw.zip
fi

# zsh by default
if type zsh > /dev/null; then
  if [ -n "`$SHELL -c 'echo $ZSH_VERSION'`" ]; then
    echo 'Shell is already zsh'
  else
    chsh -s $(which zsh)
  fi
else
  echo 'info: zsh is not installed'
fi

{{ end }}
