# This file is a template managed by Chezmoi, it must be edited with `chezmoi edit`.
# ---------------------------------

# For startup profiling (uncomment then launch the command `zprof` to start profiling)
# zmodload zsh/zprof

aliasDirectory="$HOME/.config/aliases"
if [[ -d "$aliasDirectory" ]]; then
  for file in $aliasDirectory/*.zsh; do
    if [[ -f $file ]]; then
      source $file
    fi
  done
fi

export EDITOR=nvim
export VISUAL=nvim

{{ if eq .where "work" }}
  {{- if eq .chezmoi.os "darwin" }}
    if type brew &>/dev/null
    then
      # Setup Google Cloud sdk
      source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"
      source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"
    fi

    # using podman for docker commands
    # export DOCKER_HOST='unix:///Users/laurenthirthouidou/.local/share/containers/podman/machine/qemu/podman.sock'
    export DOCKER_HOST=unix:///var/run/docker.sock
  {{- end }}
{{- end }}

{{ if eq .chezmoi.os "darwin" }}
  if type brew &>/dev/null
  then
    # Setup FPATH
    FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"

    source "$(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh"
    source "$(brew --prefix)/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" 

    # Setup fzf
    source "$(brew --prefix)/opt/fzf/shell/completion.zsh"
  fi


  # PYTHON
  export PATH="$PATH:$HOME/Library/Python/3.9/bin"

  # Docker CLI 
  export PATH="$HOME/.docker/bin:$PATH"

{{- end }}

{{- if eq .chezmoi.os "linux" }}
  export PATH="$HOME/bin:/snap/bin:$HOME/.local/bin:/opt/nvim-linux64/bin:$PATH"
{{- end }}

# highlight tab suggestions 
zstyle ':completion:*:*:git:*' script /usr/local/etc/bash_completion.d/git-completion.bash
zstyle ':completion:*' menu select
fpath=(/usr/local/share/zsh-completions $fpath)
autoload -Uz compinit
{{- if eq .chezmoi.os "darwin" }}
if [ $(date +'%j') != $(stat -f '%Sm' -t '%j' ~/.zcompdump) ]; then
  compinit
else
  compinit -C
fi
{{- end }}
zmodload -i zsh/complist

# Setup fnm
if type fnm > /dev/null; then
  eval "$(fnm env --use-on-cd)"
else
  echo 'info: fnm is not installed'
fi

# starship
if type starship > /dev/null; then
  eval "$(starship init zsh)"
else
  echo 'info: starship is not installed'
fi

# Always open a tmux session only when not already in tmux and when not in other program (vscode or webstorm)
if [[ "$TERM" != "screen-256color" && "$TERM" != "tmux-256color" && "$TERM" != "tmux" && "$TERM" != "screen" ]]; then
  if [[ "$TERM_PROGRAM" != "vscode" ]]; then
    if type tmux > /dev/null; then
      tmux attach-session -t "$USER" || tmux new-session -s "$USER"
    fi
  fi
fi

# ATUIN (must be after set vi mode)
if type atuin > /dev/null; then
  export ATUIN_NOBIND="true"
  eval "$(atuin init zsh)"
  bindkey '^r' _atuin_search_widget
else
  echo 'info: atuin is not installed'
fi
